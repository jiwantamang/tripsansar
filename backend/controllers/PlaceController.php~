<?php

namespace backend\controllers;

use Yii;
use backend\models\Place;
use backend\models\PlaceSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\web\UploadedFile;
use yii\helpers\Url;
use yii\imagine\Image;
use backend\models\PlaceImage;
use backend\models\Addresses;

/**
 * PlaceController implements the CRUD actions for Place model.
 */
class PlaceController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all Place models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new PlaceSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Place model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Place model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {


        $model = new Place();

        if ($model->load(Yii::$app->request->post()))
         {
             $id = Yii::$app->user->id;


            $model->user_id = $id;

            $model->file = UploadedFile::getInstances($model, 'file');


            $aid = Addresses::find()->where(['cities_city_id'=>$model->city])->one()['adress_id'];

            $model->placeaddress = $aid.'';

            //$model->file = null;
            if($model->save())
            {
                foreach($model->file as $sfile){
                              $newName = date("Y-m-d").date("h:i:sa").$sfile->name;
                              $sfile->saveAs( Yii::$app->basePath.'/'.'upload/image/'.$newName);
                              // save data in image table
                              $newImg = new PlaceImage();
                              $newImg->image_name =$newName;
                              //$model->placeimages= $newName.$sfile->name;
                              $newImg->place_id = $model->place_id;

                              if($newImg->save()){

                                Image::thumbnail(Yii::$app->basePath.'/'.'upload/image/'.$newName,120,120)
                                      ->save(Yii::$app->basePath.'/'.'upload/thumbnail/'.$newName, ['quality' => 80]);

                                Image::thumbnail(Yii::$app->basePath.'/'.'upload/image/'.$newName,200,200)
                                      ->save(Yii::$app->basePath.'/'.'upload/thumbnail_widget/'.$newName, ['quality' => 120]);

                              }else{
                                  print_r ($newImg->errors);
                                  return;
                              }
                }

                return $this->redirect(['view', 'id' => $model->place_id]);
              }
            else{
                print_r ($model->errors);
            }


        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        } q
    }

    /**
     * Updates an existing Place model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post())) {



             $model->file = UploadedFile::getInstance($model, 'placeimages');

            $model->file->saveAs('uploads/'.$model->file->name.'.'.$model->file->extension);
            $model->placeimages= $model->file->name.'.'.$model->file->extension;

            if($model->save())





            return $this->redirect(['view', 'id' => $model->place_id]);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing Place model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the Place model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Place the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Place::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }



    public function actionPlacedescription($id){
        return $this->render(
            "placedescription",['id'=>$id,


                ]);

    }

    public function actionSearch()
    {
         $search_string = isset($_POST['placestring']) ? $str = $_POST['placestring'] : $str="default";

        return $this->render("place_search",[
            'searchstring'=>$search_string
        ]);
    }

    public function actionAllplace()
    {
        return $this->render('allplaces');
    }
}
